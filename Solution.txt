
Algorithm:-

1. Zip every player with role and strength like:-

   [(1, 'bats', 5), (2, 'bats', 1), (3, 'bats', 3), (4, 'bats', 1), (5, 'bowl', 1), (6, 'bowl', 3), (7, 'wk', 2), (8, 'wk', 2), (9, 'wk', 3), (10, 'wk', 4), (11, 'wk', 2)]

2. For every player we have three options:-
   a) Select him in team1 (According to his role)
   b) Select him in team2 (According to his role)
   c) Do not select in any team

3. If number of left players in both the teams is Zero then we have a probable 
   team.

4. Compare the probable team combination with the result team combination with 
   cost as the strength of each team as maximum and inter team difference be minimum.

5. Result team combination will be the optimum solution.


How to run the code:-

1. In the main change the configuration of players, their role and number of
   allowed players for each role.

2. Now run the python code by writing following command in the terminal:-
   
   python dream11.py

3. Output will be shown on the terminal window.    